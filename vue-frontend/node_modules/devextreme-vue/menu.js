/*!
 * devextreme-vue
 * Version: 21.1.12
 * Build date: Fri Apr 07 2023
 *
 * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-vue
 */

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DxShowSubmenuMode = exports.DxShowFirstSubmenuMode = exports.DxShow = exports.DxItem = exports.DxHide = exports.DxDelay = exports.DxAnimation = exports.DxMenu = void 0;
var menu_1 = __importDefault(require("devextreme/ui/menu"));
var index_1 = require("./core/index");
var index_2 = require("./core/index");
var DxMenu = index_1.createComponent({
    props: {
        accessKey: String,
        activeStateEnabled: Boolean,
        adaptivityEnabled: Boolean,
        animation: Object,
        cssClass: String,
        dataSource: [Array, Object, String],
        disabled: Boolean,
        disabledExpr: [Function, String],
        displayExpr: [Function, String],
        elementAttr: {},
        focusStateEnabled: Boolean,
        height: [Function, Number, String],
        hideSubmenuOnMouseLeave: Boolean,
        hint: String,
        hoverStateEnabled: Boolean,
        items: Array,
        itemsExpr: [Function, String],
        itemTemplate: {},
        onContentReady: Function,
        onDisposing: Function,
        onInitialized: Function,
        onItemClick: [Function, String],
        onItemContextMenu: Function,
        onItemRendered: Function,
        onOptionChanged: Function,
        onSelectionChanged: Function,
        onSubmenuHidden: Function,
        onSubmenuHiding: Function,
        onSubmenuShowing: Function,
        onSubmenuShown: Function,
        orientation: String,
        rtlEnabled: Boolean,
        selectByClick: Boolean,
        selectedExpr: [Function, String],
        selectedItem: {},
        selectionMode: String,
        showFirstSubmenuMode: [Object, String],
        showSubmenuMode: [Object, String],
        submenuDirection: String,
        tabIndex: Number,
        visible: Boolean,
        width: [Function, Number, String]
    },
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:accessKey": null,
        "update:activeStateEnabled": null,
        "update:adaptivityEnabled": null,
        "update:animation": null,
        "update:cssClass": null,
        "update:dataSource": null,
        "update:disabled": null,
        "update:disabledExpr": null,
        "update:displayExpr": null,
        "update:elementAttr": null,
        "update:focusStateEnabled": null,
        "update:height": null,
        "update:hideSubmenuOnMouseLeave": null,
        "update:hint": null,
        "update:hoverStateEnabled": null,
        "update:items": null,
        "update:itemsExpr": null,
        "update:itemTemplate": null,
        "update:onContentReady": null,
        "update:onDisposing": null,
        "update:onInitialized": null,
        "update:onItemClick": null,
        "update:onItemContextMenu": null,
        "update:onItemRendered": null,
        "update:onOptionChanged": null,
        "update:onSelectionChanged": null,
        "update:onSubmenuHidden": null,
        "update:onSubmenuHiding": null,
        "update:onSubmenuShowing": null,
        "update:onSubmenuShown": null,
        "update:orientation": null,
        "update:rtlEnabled": null,
        "update:selectByClick": null,
        "update:selectedExpr": null,
        "update:selectedItem": null,
        "update:selectionMode": null,
        "update:showFirstSubmenuMode": null,
        "update:showSubmenuMode": null,
        "update:submenuDirection": null,
        "update:tabIndex": null,
        "update:visible": null,
        "update:width": null,
    },
    computed: {
        instance: function () {
            return this.$_instance;
        }
    },
    beforeCreate: function () {
        this.$_WidgetClass = menu_1.default;
        this.$_hasAsyncTemplate = true;
        this.$_expectedChildren = {
            animation: { isCollectionItem: false, optionName: "animation" },
            item: { isCollectionItem: true, optionName: "items" },
            showFirstSubmenuMode: { isCollectionItem: false, optionName: "showFirstSubmenuMode" },
            showSubmenuMode: { isCollectionItem: false, optionName: "showSubmenuMode" }
        };
    }
});
exports.DxMenu = DxMenu;
var DxAnimation = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:hide": null,
        "update:show": null,
    },
    props: {
        hide: Object,
        show: Object
    }
});
exports.DxAnimation = DxAnimation;
DxAnimation.$_optionName = "animation";
DxAnimation.$_expectedChildren = {
    hide: { isCollectionItem: false, optionName: "hide" },
    show: { isCollectionItem: false, optionName: "show" }
};
var DxDelay = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:hide": null,
        "update:show": null,
    },
    props: {
        hide: Number,
        show: Number
    }
});
exports.DxDelay = DxDelay;
DxDelay.$_optionName = "delay";
var DxHide = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:complete": null,
        "update:delay": null,
        "update:direction": null,
        "update:duration": null,
        "update:easing": null,
        "update:from": null,
        "update:staggerDelay": null,
        "update:start": null,
        "update:to": null,
        "update:type": null,
    },
    props: {
        complete: Function,
        delay: Number,
        direction: String,
        duration: Number,
        easing: String,
        from: {},
        staggerDelay: Number,
        start: Function,
        to: {},
        type: String
    }
});
exports.DxHide = DxHide;
DxHide.$_optionName = "hide";
var DxItem = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:beginGroup": null,
        "update:closeMenuOnClick": null,
        "update:disabled": null,
        "update:html": null,
        "update:icon": null,
        "update:items": null,
        "update:selectable": null,
        "update:selected": null,
        "update:template": null,
        "update:text": null,
        "update:visible": null,
    },
    props: {
        beginGroup: Boolean,
        closeMenuOnClick: Boolean,
        disabled: Boolean,
        html: String,
        icon: String,
        items: Array,
        selectable: Boolean,
        selected: Boolean,
        template: {},
        text: String,
        visible: Boolean
    }
});
exports.DxItem = DxItem;
DxItem.$_optionName = "items";
DxItem.$_isCollectionItem = true;
var DxShow = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:complete": null,
        "update:delay": null,
        "update:direction": null,
        "update:duration": null,
        "update:easing": null,
        "update:from": null,
        "update:staggerDelay": null,
        "update:start": null,
        "update:to": null,
        "update:type": null,
    },
    props: {
        complete: Function,
        delay: Number,
        direction: String,
        duration: Number,
        easing: String,
        from: {},
        staggerDelay: Number,
        start: Function,
        to: {},
        type: String
    }
});
exports.DxShow = DxShow;
DxShow.$_optionName = "show";
var DxShowFirstSubmenuMode = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:delay": null,
        "update:name": null,
    },
    props: {
        delay: [Number, Object],
        name: String
    }
});
exports.DxShowFirstSubmenuMode = DxShowFirstSubmenuMode;
DxShowFirstSubmenuMode.$_optionName = "showFirstSubmenuMode";
DxShowFirstSubmenuMode.$_expectedChildren = {
    delay: { isCollectionItem: false, optionName: "delay" }
};
var DxShowSubmenuMode = index_2.createConfigurationComponent({
    emits: {
        "update:isActive": null,
        "update:hoveredElement": null,
        "update:delay": null,
        "update:name": null,
    },
    props: {
        delay: [Number, Object],
        name: String
    }
});
exports.DxShowSubmenuMode = DxShowSubmenuMode;
DxShowSubmenuMode.$_optionName = "showSubmenuMode";
DxShowSubmenuMode.$_expectedChildren = {
    delay: { isCollectionItem: false, optionName: "delay" }
};
exports.default = DxMenu;
